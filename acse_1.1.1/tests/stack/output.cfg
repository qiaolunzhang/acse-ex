NOTE : Temporary registers are considered as
       variables of the intermediate language. 
       Variable 'R0' (that refers to the 
       physical register 'RO') is always 
       considered LIVE-IN for each node of 
       a basic block. 
       Thus, in the following control flow graph, 
       'R0' will never appear as LIVE-IN or LIVE-OUT
       variable for a statement.

       If you want to consider 'R0' as
       a normal variable, you have to set
       to 0 the value of the macro CFLOW_ALWAYS_LIVEIN_R0
       defined in "cflow_constants.h".


**************************
     CONTROL FLOW GRAPH   
**************************
NUMBER OF BASIC BLOCKS : 17 
NUMBER OF USED VARIABLES : 27 
--------------------------
START BASIC BLOCK INFOS.  
--------------------------
[BLOCK 1] 
NUMBER OF PREDECESSORS : 0 
NUMBER OF SUCCESSORS : 2 
NUMBER OF INSTRUCTIONS : 3 
	1.  	MOVA R2 0 
	2.  	SUBI R3 R2 #5 
	3.  	BEQ L2 
--------------------------
[BLOCK 2] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 5 
	1.  	MOVA R4 L0 
	2.  	ADD R4 R4 R2 
	3.  	MOVA R5 1 
	4.  	ADD (R4) R0 R5 
	5.  	ADDI R2 R2 #1 
--------------------------
[BLOCK 3] 
NUMBER OF PREDECESSORS : 2 
NUMBER OF SUCCESSORS : 2 
NUMBER OF INSTRUCTIONS : 3 
	1.  L2	NOP 
	2.  	SUBI R6 R2 #5 
	3.  	BEQ L3 
--------------------------
[BLOCK 4] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 5 
	1.  	MOVA R7 L0 
	2.  	ADD R7 R7 R2 
	3.  	MOVA R8 2 
	4.  	ADD (R7) R0 R8 
	5.  	ADDI R2 R2 #1 
--------------------------
[BLOCK 5] 
NUMBER OF PREDECESSORS : 2 
NUMBER OF SUCCESSORS : 2 
NUMBER OF INSTRUCTIONS : 3 
	1.  L3	NOP 
	2.  	SUBI R9 R2 #5 
	3.  	BEQ L4 
--------------------------
[BLOCK 6] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 5 
	1.  	MOVA R10 L0 
	2.  	ADD R10 R10 R2 
	3.  	MOVA R11 3 
	4.  	ADD (R10) R0 R11 
	5.  	ADDI R2 R2 #1 
--------------------------
[BLOCK 7] 
NUMBER OF PREDECESSORS : 2 
NUMBER OF SUCCESSORS : 2 
NUMBER OF INSTRUCTIONS : 3 
	1.  L4	NOP 
	2.  	SUBI R12 R2 #5 
	3.  	BEQ L5 
--------------------------
[BLOCK 8] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 5 
	1.  	MOVA R13 L0 
	2.  	ADD R13 R13 R2 
	3.  	MOVA R14 4 
	4.  	ADD (R13) R0 R14 
	5.  	ADDI R2 R2 #1 
--------------------------
[BLOCK 9] 
NUMBER OF PREDECESSORS : 2 
NUMBER OF SUCCESSORS : 2 
NUMBER OF INSTRUCTIONS : 3 
	1.  L5	NOP 
	2.  	SUBI R15 R2 #5 
	3.  	BEQ L6 
--------------------------
[BLOCK 10] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 5 
	1.  	MOVA R16 L0 
	2.  	ADD R16 R16 R2 
	3.  	MOVA R17 5 
	4.  	ADD (R16) R0 R17 
	5.  	ADDI R2 R2 #1 
--------------------------
[BLOCK 11] 
NUMBER OF PREDECESSORS : 2 
NUMBER OF SUCCESSORS : 2 
NUMBER OF INSTRUCTIONS : 3 
	1.  L6	NOP 
	2.  	SUBI R18 R2 #5 
	3.  	BEQ L7 
--------------------------
[BLOCK 12] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 5 
	1.  	MOVA R19 L0 
	2.  	ADD R19 R19 R2 
	3.  	MOVA R20 6 
	4.  	ADD (R19) R0 R20 
	5.  	ADDI R2 R2 #1 
--------------------------
[BLOCK 13] 
NUMBER OF PREDECESSORS : 2 
NUMBER OF SUCCESSORS : 2 
NUMBER OF INSTRUCTIONS : 3 
	1.  L7	NOP 
	2.  	SUBI R21 R2 #0 
	3.  	BEQ L8 
--------------------------
[BLOCK 14] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 6 
	1.  	SUBI R21 R2 #1 
	2.  	MOVA R22 L0 
	3.  	ADD R22 R22 R21 
	4.  	ADD R23 R0 (R22) 
	5.  	ADD R1 R0 R23 
	6.  	SUBI R2 R2 #1 
--------------------------
[BLOCK 15] 
NUMBER OF PREDECESSORS : 2 
NUMBER OF SUCCESSORS : 2 
NUMBER OF INSTRUCTIONS : 4 
	1.  L8	NOP 
	2.  	WRITE R1 0 
	3.  	SUBI R24 R2 #0 
	4.  	BEQ L9 
--------------------------
[BLOCK 16] 
NUMBER OF PREDECESSORS : 1 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 6 
	1.  	SUBI R24 R2 #1 
	2.  	MOVA R25 L0 
	3.  	ADD R25 R25 R24 
	4.  	ADD R26 R0 (R25) 
	5.  	ADD R1 R0 R26 
	6.  	SUBI R2 R2 #1 
--------------------------
[BLOCK 17] 
NUMBER OF PREDECESSORS : 2 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 3 
	1.  L9	NOP 
	2.  	WRITE R1 0 
	3.  	HALT 
**************************


