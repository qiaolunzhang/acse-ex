NOTE : Temporary registers are considered as
       variables of the intermediate language. 
       Variable 'R0' (that refers to the 
       physical register 'RO') is always 
       considered LIVE-IN for each node of 
       a basic block. 
       Thus, in the following control flow graph, 
       'R0' will never appear as LIVE-IN or LIVE-OUT
       variable for a statement.

       If you want to consider 'R0' as
       a normal variable, you have to set
       to 0 the value of the macro CFLOW_ALWAYS_LIVEIN_R0
       defined in "cflow_constants.h".


**************************
     CONTROL FLOW GRAPH   
**************************
NUMBER OF BASIC BLOCKS : 1 
NUMBER OF USED VARIABLES : 5 
--------------------------
START BASIC BLOCK INFOS.  
--------------------------
[BLOCK 1] 
NUMBER OF PREDECESSORS : 0 
NUMBER OF SUCCESSORS : 1 
NUMBER OF INSTRUCTIONS : 9 
	1.  	READ R1 0 
			DEF = [R1]
			LIVE IN = []
			LIVE OUT = [R1]
	2.  	READ R2 0 
			DEF = [R2]
			LIVE IN = [R1]
			LIVE OUT = [R1, R2]
	3.  	ADD R4 R1 R2 
			DEF = [R4]
			USES = [R1, R2]
			LIVE IN = [R1, R2]
			LIVE OUT = [R4, R1, R2]
	4.  	STORE R2 L1 
			USES = [R2]
			LIVE IN = [R4, R1, R2]
			LIVE OUT = [R4, R1]
	5.  	STORE R1 L0 
			USES = [R1]
			LIVE IN = [R4, R1]
			LIVE OUT = [R4]
	6.  	ADD R3 R0 R4 
			DEF = [R3]
			USES = [R0, R4]
			LIVE IN = [R4]
			LIVE OUT = [R3]
	7.  	WRITE R3 0 
			USES = [R3]
			LIVE IN = [R3]
			LIVE OUT = [R3]
	8.  	STORE R3 L2 
			USES = [R3]
			LIVE IN = [R3]
			LIVE OUT = []
	9.  	HALT 
			LIVE IN = []
			LIVE OUT = []
**************************


